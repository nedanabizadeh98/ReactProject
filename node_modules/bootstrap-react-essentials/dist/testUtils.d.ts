import { ComponentType } from "react";
import { Dispatch, Store } from "redux";
import { DeepPartial } from "ts-essentials";
declare type SideEffectDispatch = (...args: Parameters<Dispatch>) => void;
export declare function asyncTimeout<T extends any[]>(ms: number, ...args: T): Promise<T>;
/** Create a test store that overrides some properties from the base store. */
export declare function createTestStore(dispatch?: SideEffectDispatch, initialState?: DeepPartial<ReduxState>): Store<ReduxState>;
export declare function createTestComponent<Props>(enhance?: FunctionalEnhancer<Props, any> | ((...args: any) => FunctionalEnhancer<Props, any>)): ComponentType<Props>;
/**
 * Construct a full object from a partial object. Should only be used during
 * testing.
 */
export declare function constructObject<T>(object: Partial<T>): T;
export {};
//# sourceMappingURL=testUtils.d.ts.map