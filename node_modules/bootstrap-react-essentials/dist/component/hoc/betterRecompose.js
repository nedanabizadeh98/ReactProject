"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
var compose_1 = __importDefault(require("recompose/compose"));
var lifecycle_1 = __importDefault(require("recompose/lifecycle"));
var onlyUpdateForKeys_1 = __importDefault(require("recompose/onlyUpdateForKeys"));
var withState_1 = __importDefault(require("recompose/withState"));
/** Create an enhancer chain. */
function createEnhancerChain() {
    var enhancers = [];
    var enhancerChain = {
        startWith: function (e) { return enhancerChain.compose(e); },
        compose: function (e) {
            enhancers.push(e);
            return enhancerChain;
        },
        checkThis: function () { return enhancerChain; },
        forPropsOfType: function () { return enhancerChain; },
        enhance: function (c) { return compose_1.default.apply(void 0, enhancers)(c); },
        omitKeysFromInProps: function () { return enhancerChain; },
        omitKeysFromOutProps: function () { return enhancerChain; },
        keepKeysForInProps: function () { return enhancerChain; },
        keepKeysForOutProps: function () { return enhancerChain; },
        infuseWithProps: function (c) { return c; }
    };
    return enhancerChain;
}
exports.createEnhancerChain = createEnhancerChain;
/** Create a type-safe licycle HOC. */
function lifecycle(spec) {
    return lifecycle_1.default(spec);
}
exports.lifecycle = lifecycle;
/** Create a type-safe onlyUpdateForKeys. */
function onlyUpdateForKeys() {
    var keys = [];
    for (var _i = 0; _i < arguments.length; _i++) {
        keys[_i] = arguments[_i];
    }
    return onlyUpdateForKeys_1.default(keys);
}
exports.onlyUpdateForKeys = onlyUpdateForKeys;
/** Create a type-safe withState HOC. */
function withState(stateName, stateUpdateFuncName, initialState) {
    return withState_1.default(stateName, stateUpdateFuncName, initialState);
}
exports.withState = withState;
