import H from "history";
export declare function getURLComponents({ pathname, search }: Pick<H.Location, "pathname" | "search">): Readonly<{
    pathname: string;
    query: URLQueryArrayMap;
}>;
/** This should take care of both hash and normal URLs. */
export declare function getURLQuery(location: Pick<H.Location, "pathname" | "search">): URLQueryArrayMap;
export declare function toArray<T>(value: T | readonly T[]): readonly T[];
export declare function replaceURLQuery(history: H.History, location: Pick<H.Location, "pathname">, query: URLQueryMap): void;
export declare function appendURLQuery(history: H.History, location: Pick<H.Location, "pathname" | "search">, urlQuery: URLQueryMap): void;
//# sourceMappingURL=utils.d.ts.map